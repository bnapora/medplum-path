version: '3.7'
include:
  - ./app-containers/orthanc/docker-compose.orthanc.yml
  - ./app-containers/viewer-ohif/docker-compose.viewer-ohif.yml
services:
  # apps:
  #   container_name: apps
  #   build:
  #     dockerfile: ./apps/docker/Dockerfile.medplum.apps
  #   # command: /bin/sh -c "/app/entrypoint.sh"
  #   command:
  #     - /bin/bash 
  #     - -c 
  #     - |
  #       cd app-admin && npm run dev
    
  #   expose: 
  #     - 3001
  #     - 3005
  #   ports:
  #     - 3001:3001
  #     - 3005:3005
  #   depends_on: [medplum] 

  app-admin:
    container_name: app-admin
    profiles: [applications]
    build:
      dockerfile: ./apps/docker/Dockerfile.apps
      args:
        APP_DIST_DIR: /apps/app-admin/dist
        # APP_ENV_PATH: /apps/app-admin/.env
        APP_ENV_PATH: /apps/app-admin/.env.app.poc1.gestaltcloud.com
    expose:
      - 80
    ports:
      - 3001:80

  app-pathcloud:
    container_name: app-pathcloud
    profiles: [applications]
    build:
      dockerfile: ./apps/docker/Dockerfile.apps
      args:
        APP_DIST_DIR: /apps/path-medical/dist
        APP_ENV_PATH: /apps/path-medical/.env
    expose:
      - 80
    ports:
      - 3005:80
  
  # # Medplum Server Distribution Files Only
  # medplum-dist:
  #   container_name: medplum
  #   profiles: [medplum-dist]
  #   build:
  #     dockerfile: ./apps/docker/Dockerfile.medplum.server.dist 
  #     args:
  #       MEDPLUM_CONFIG_FILE: medplum.config.json.container
  #   ports:
  #     - 8103:3000

  medplum:
    container_name: medplum
    profiles: [medplum]
    build:
      dockerfile: ./apps/docker/Dockerfile.medplum.server
      args:
        MEDPLUM_CONFIG_FILE: medplum.config.json.container
    command: npm start
    volumes:
      # - /mnt/datadrive/workspace/medplum-path/apps/bots/src/gcp-dicomstore-webhook-bigquery:/app/bots/gcp-dicomstore-webhook-bigquery
      - ./apps/bots/src/gcp-dicomstore-webhook-bigquery:/app/bots/gcp-dicomstore-webhook-bigquery
    expose: 
      - 80
      - 8103
    ports:
      - 8103:8103
    depends_on: [postgres, redis]  

  postgres:
    image: postgres:12
    restart: always
    environment:
      - POSTGRES_USER=medplum
      - POSTGRES_PASSWORD=medplum
    volumes:
      - ./postgres/postgres.conf:/usr/local/etc/postgres/postgres.conf
      - ./postgres/:/docker-entrypoint-initdb.d/
      - postgres_medplum_localhost:/var/lib/postgresql/data
    command: postgres -c config_file=/usr/local/etc/postgres/postgres.conf
    expose: [5432]
    ports:
      - '5432:5432'
  redis:
    image: redis:6
    restart: always
    command: redis-server --requirepass medplum
    expose: [6379]
    ports:
      - '6379:6379'
  nginx:
    build: 
        context: ./nginx
        dockerfile: Dockerfile
    container_name: nginx
    profiles: [applications]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config/localhost/conf.d:/etc/nginx/conf.d
    restart: unless-stopped
    ports: 
      - 80:80
volumes:
  postgres_medplum_localhost: {}